akka {
  loglevel         = "INFO"
  log-dead-letters = on
  stdout-loglevel  = "INFO"
  actor {
    debug.lifecycle = on
    deployment {
      /heimdall-service-handler/heimdall-router {
        router = round-robin-pool
        nr-of-instances = 1
      }
      /heimdall-service-handler/proxy-router {
        router = round-robin-pool
        nr-of-instances = 1
      }
      /heimdall-service-handler/shadow-proxy-router {
        router = round-robin-pool
        nr-of-instances = 1
      }
      /heimdall-service-handler/writer-router {
        router = round-robin-pool
        nr-of-instances = 1
      }
    }
  }
  extensions = ["kamon.metric.Metrics", "kamon.statsd.StatsD"]
}
kamon {
  # What should be recorder
  metrics {
    filters = [
      {
        # actors we should be monitored
        actor {
          # a list of what should be included
          includes = [ 
            "user/*"
            "user/heimdall-service-handler"
            "user/heimdall-service-handler/*"
          ]
          # a list of what should be excluded
          excludes = [ "system/*", "user/IO*" ]
        }
      },

      # not sure about this yet. Looks important
      {
        trace {
          includes = [ "*" ]
          excludes = []
        }
      }
    ]
  }
  
  # ~~~~~~ StatsD configuration ~~~~~~~~~~~~~~~~~~~~~~~~

  statsd {
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 1 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "heimdall"
    }
  }
}

heimdall {
  admin {
    host = "localhost"
    port = 7071
  }
  proxy {
    host = "localhost"
    port = 7070
  }
  lifecycle = [
    "/user/heimdall-service-handler/proxy-router"
    "/user/heimdall-service-handler/shadow-proxy-router"
    "/user/heimdall-service-handler/writer-router"
  ]
  mapping {
    a_v1 {
      prefix = "a"
      version = "v1"
      source = ["localhost:8888"]
    }
    a_v2 {
      prefix = "a"
      version = "v2"
      source = ["localhost:8888", "spray.io"]
    }
    a_v3 {
      prefix = "a"
      version = "v3"
      source = ["localhost:8888"]
    }
    b_v1 {
      prefix = "b"
      version = "v1"
      source = ["localhost:8888", "spray.io"]
    }
  }
}
